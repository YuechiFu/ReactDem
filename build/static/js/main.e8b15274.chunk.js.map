{"version":3,"sources":["assets/img/texture/bg.jpg","controls/font.js","components/dateFormat/dateFormat.jsx","components/three/threeCanvas.jsx","components/daily/editor.jsx","components/daily/dailyReport.jsx","components/form/input.jsx","view/main/main.jsx","components/form/select.jsx","components/report/taskInput.jsx","components/report/editor.jsx","view/report/report.jsx","components/form2Json/skuInput.jsx","components/form2Json/skuForm.jsx","components/form2Json/addSkuItem.jsx","components/form2Json/jsonOpera.jsx","components/form2Json/jsonContent.jsx","view/form2Json/form2Json.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","content","stats","controls","gui","fontModel","font","renderer","camera","scene","light","rootDom","document","getElementById","w","offsetWidth","h","offsetHeight","render","onWindowResize","aspect","updateProjectionMatrix","setSize","animate","update","position","y","lightY","x","lightX","z","lightZ","requestAnimationFrame","innerHTML","querySelector","cubeX","cubeY","cubeZ","fontSize","fontHeight","datGui","dat","GUI","add","initGui","THREE","antialias","appendChild","domElement","set","load","res","size","height","center","console","log","map","skin","material","side","OrbitControls","enableDamping","enableZoom","autoRotate","minDistance","maxDistance","enablePan","Stats","dom","window","onresize","dateFormat","React","Component","props","state","currentDate","fmt","this","format","date","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","setState","getDateStr","timer","setInterval","tick","clearInterval","Editor","isVisible","isDelay","delayReason","list","title","time","subtasks","results","resultContent","submitTime","e","target","value","keyword","item","index","isInput","subIndex","splice","push","ClipBoard","className","htmlFor","type","name","id","onChange","onDelayRadio","bind","placeholder","onDelayReasonInput","onClick","key","onTaskModify","disabled","Array","fill","op","subItem","onSubtaskTitleInput","onDeleteSubtask","onDAddSubtask","onDeleteTask","onAddTask","data-index","style","data-clipboard-action","data-clipboard-target","showContent","DailyReport","Input","isClear","val","nodeName","changeValue","options","taskInput","taskTitle","subTasks","arr","slice","inputTaskTitle","addSubtask","action","skuInput","skuData","sku","obj","change","delete","changeData","deleteItem","form2Input","newVal","skuList","changeSkuData","deleteSkuItem","qty","parseInt","addSkuInput","changeQty","JsonOpera","jsonString","jsonData","warningContent","nextProps","newArr","warning","orEle","str","innerText","formatData","stringData","changeFormData","addSkuItem","App","width","documentElement","getBoundingClientRect","meta","createElement","head","remInit","setMeta","addEventListener","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8b15274.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.46b4c7ce.jpg\";","import * as THREE from 'three';\nimport { OrbitControls } from '@jsm/controls/OrbitControls.js';\nimport Stats from '@jsm/libs/stats.module.js';\nimport dat from '@jsm/libs/dat.gui.module.js';\nimport skin from '@img/texture/bg.jpg'\n// import fontFile from '@fonts/gentilis_regular.typeface.json'\n// console.log(fontFile)\n\nconst path = require(\"path\")\n\n// console.log(paths)\nexport default function(content){\n\n// 根元素\n\nlet rootDom = document.getElementById('3d-canvas');\nlet w = rootDom.offsetWidth;\nlet h = rootDom.offsetHeight;\nrootDom.innerHTML = ''\n\n// 初始化性能插件\nlet stats;\nfunction initStats() {\n  stats = new Stats();\n  rootDom.appendChild(stats.dom);\n}\n\n// 初始化交互插件\nlet controls;\nfunction initControls() {\n    controls = new OrbitControls( camera, renderer.domElement );\n    // 如果使用animate方法时，将此函数删除\n    //controls.addEventListener( 'change', render );\n    // 使动画循环使用时阻尼或自转 意思是否有惯性\n    controls.enableDamping = false;\n    //动态阻尼系数 就是鼠标拖拽旋转灵敏度\n    //controls.dampingFactor = 0.25;\n    //是否可以缩放\n    controls.enableZoom = true;\n    //是否自动旋转\n    controls.autoRotate = false;\n    //d\n    controls.minDistance  = 200;\n    //设置相机距离原点的最远距离\n    controls.maxDistance  = 600;\n    //是否开启右键拖拽\n    controls.enablePan = true;\n}\n\n  //初始化dat.GUI简化试验流程\n  let gui;\n  function initGui() {\n      if(document.querySelector('.dg.ac') ){\n        document.querySelector('.dg.ac').innerHTML = ''\n      }\n      //声明一个保存需求修改的相关数据的对象\n      gui = {\n          lightY: 100, //灯光y轴的位置\n          lightX: 100, //灯光X轴的位置\n          lightZ: 100, //灯光Z轴的位置\n          cubeX: 25, //立方体的x轴位置\n          cubeY: 10, //立方体的x轴位置\n          cubeZ: -5, //立方体的z轴的位置\n          fontSize : 60,\n          fontHeight : 10,\n      };\n      var datGui = new dat.GUI();\n      //将设置属性添加到gui当中，gui.add(对象，属性，最小值，最大值）\n      datGui.add(gui, \"lightY\", 0, 100);\n      datGui.add(gui, \"lightX\", 0, 100);\n      datGui.add(gui, \"lightZ\", 0, 100);\n      datGui.add(gui, \"cubeX\", -30, 301);\n      datGui.add(gui, \"cubeY\", -30, 30);\n      datGui.add(gui, \"cubeZ\", -30, 30);\n      datGui.add(gui, \"fontSize\", 16, 200);\n      datGui.add(gui, \"fontHeight\", 20, 400);\n  }\n  var fontModel;\n  var font;\n  function initModel() {\n    var loader = new THREE.FontLoader();\n     loader.load( 'https://threejs.org/examples/fonts/gentilis_bold.typeface.json', function (res) {\n        font = new THREE.TextBufferGeometry(content, {\n            font:  res,\n            size: gui.fontSize,\n            height: gui.fontHeight,\n        });\n\n        font.center();\n        console.log(font)\n        var map = new THREE.TextureLoader().load(skin);\n        var material = new THREE.MeshLambertMaterial({map:map,side:THREE.DoubleSide});\n\n        fontModel = new THREE.Mesh(font,material);\n\n        scene.add(fontModel);\n     })\n}\n    var renderer;\n    function initRender() {\n        renderer = new THREE.WebGLRenderer({antialias: true});\n        renderer.setSize(w, h);\n        rootDom.appendChild(renderer.domElement);\n    }\n\n    var camera;\n    function initCamera() {\n        camera = new THREE.PerspectiveCamera(45, w / h, 1, 10000);\n        camera.position.set(0, 0, 400);\n    }\n\n    var scene;\n    function initScene() {\n        scene = new THREE.Scene();\n    }\n\n    var light;\n    function initLight() {\n        scene.add(new THREE.AmbientLight(0xffffff));\n        light = new THREE.DirectionalLight(0xffffff);\n        light.position.set(gui.lightX, gui.lightZ, gui.lightY);\n        scene.add(light);\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n  }\n\n  //窗口变动触发的函数\n  function onWindowResize() {\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      render();\n      renderer.setSize(w,h);\n\n  }\n\n  function animate() {\n\n        //更新相关位置\n      //更新控制器\n      controls.update();\n      render();\n      stats.update();\n\n      light.position.y = gui.lightY;\n      light.position.x = gui.lightX;\n      light.position.z= gui.lightZ;\n    //   font.size = gui.fontSize;\n    //   font.height = gui.fontHeight\n      //更新性能插件\n      requestAnimationFrame(animate);\n  }\n\n  function draw() {\n    initGui();\n      initRender();\n      initScene();\n      initCamera();\n      initLight();\n      initModel();\n      initControls();\n      initStats();\n\n      animate();\n      window.onresize = onWindowResize;\n  }\n  draw()\n\n}","import React from \"react\"\nexport default class dateFormat extends React.Component{\n    constructor(props){\n        super();\n        this.state = {\n            currentDate:\"\",\n        }\n    }\n    getDateStr(){\n        let fmt = this.props.format;\n        let date = new Date();\n        let o = { \n           \"M+\" : date.getMonth()+1,                 //月份 \n           \"d+\" : date.getDate(),                    //日 \n           \"h+\" : date.getHours(),                   //小时 \n           \"m+\" : date.getMinutes(),                 //分 \n           \"s+\" : date.getSeconds(),                 //秒 \n           \"q+\" : Math.floor((date.getMonth()+3)/3), //季度 \n           \"S\"  : date.getMilliseconds()             //毫秒 \n       }; \n       if(/(y+)/.test(fmt)) {\n               fmt=fmt.replace(RegExp.$1, (date.getFullYear()+\"\").substr(4 - RegExp.$1.length)); \n       }\n        for(let k in o) {\n           if(new RegExp(\"(\"+ k +\")\").test(fmt)){\n                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\n            }\n        }\n       return fmt; \n    }\n    tick(){\n        this.setState({ currentDate : this.getDateStr()});\n    }\n    componentDidMount(){\n        this.timer = setInterval(()=>this.tick())\n    }\n    componentWillUnmount(){\n        clearInterval(this.timer)\n    }\n    render(){\n\n        return(\n            <span>\n                {this.getDateStr()} \n            </span>\n        )\n        \n    \n    }\n}","import React from \"react\";\nimport react from \"react/cjs/react.development\";\nimport init3D from \"@controls/font\";\nexport default class extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      inputVal:\"\"\n    }\n\n  }\n  changeVal(e){\n    this.setState({\n      inputVal:e.target.value\n    })\n  }\n  componentDidUpdate(){\n    console.log(document.getElementById(\"3d-canvas\"));\n    init3D(this.state.inputVal);\n  }\n  componentDidMount(){\n    console.log(document.getElementById(\"3d-canvas\"))\n    init3D(this.state.inputVal);\n  }\n  render(){\n    return( \n      <div className=\"three-container\">\n        <div id=\"3d-canvas\" style={{'width':'100%','height':'100px','margin':'0 auto'}}></div>\n        <input type=\"text\" onBlur={this.changeVal.bind(this)}/>\n      </div>\n      \n    )\n  }\n}","import React from \"react\";\nimport DateFormat from \"../dateFormat/dateFormat\";\nimport \"@style/daily.scss\";\nimport ClipBoard from \"clipboard\";\nexport default class Editor extends React.Component{\n    constructor(props){\n        super();\n        this.state = {\n                isVisible : false,\n                date:\"\",\n                isDelay : false ,\n                delayReason : \"\",\n                list:[{\n                    title : \"\",\n                    time : 0,\n                    subtasks : [],\n                    results : [],\n                    resultContent : ''\n                }],\n                submitTime :\"\",\n        }\n    }\n    componentDidMount(){\n       \n    }\n    onDelayRadio(e,isDelay){\n        console.log(isDelay)\n        this.setState({isDelay:e.target.value})\n    }\n    onDelayReasonInput(e){\n        this.setState({delayReason:e.target.value})\n    }\n \n    onTaskModify(keyword,item,index,isInput,e){\n        let list  = [...this.state.list];\n        list[index][keyword] = isInput ?  e.target.value : '' ;\n        this.setState({list}) \n    }\n    onSubtaskTitleInput(item,index,subIndex,isInput,e){\n        let list  = [...this.state.list];\n        list[index][\"subtasks\"][subIndex][\"title\"] = isInput ?  e.target.value : '' ;\n        this.setState({list})\n    }\n    onDeleteTask(item,index,e){\n        let list = [...this.state.list]\n        list.splice(index,1);\n        this.setState({list})\n    }\n    onAddTask(){\n        let list = [...this.state.list];\n        list.push({\n            title : \"\",\n            time : 0,\n            subtasks : [],\n            results : [],\n            resultContent : ''\n        })\n        this.setState({list});\n        \n    }\n    onDeleteSubtask(item,index,subIndex){\n        let list = [...this.state.list];\n        list[index][\"subtasks\"].splice(subIndex,1);\n        this.setState({list})\n    }\n    onDAddSubtask(index){\n        let list = [...this.state.list];\n        list[index][\"subtasks\"].push({title:\"\"});\n        this.setState({list})\n    }\n    showContent(){\n        this.setState({isVisible:!this.state.isVisible})\n    }\n    componentDidMount(){\n        new ClipBoard('.copy-task-contents');}\n    render(){\n        return(\n            <div className=\"page-wrapper\" >\n                <div className=\"task-form-box\">\n                    <div className=\"task-form\">\n                        <div className=\"form-item delay-radio\">\n                            <div className=\"form-item-wrapper\">\n                                <div className=\"item-input\">\n                                    <div className=\"input-box\">\n                                        <label htmlFor=\"task-finish\" className={this.state.isDelay ? \"\" : \"checked\"}>finished</label>\n                                        <input  type=\"radio\"         \n                                                className=\"radio-ele\" \n                                                name=\"delay\" \n                                                value = {''}\n                                                id = \"task-finish\"\n                                                onChange = {this.onDelayRadio.bind(this)}\n                                        />\n                                    </div>\n                                    <div className=\"input-box\">\n                                        <label htmlFor=\"task-delay\" className={this.state.isDelay ? \"checked\" : \"\"}>delay</label>\n                                        <input  type=\"radio\"         \n                                                className=\"radio-ele\" \n                                                name=\"delay\" \n                                                value = {true}\n                                                id = \"task-delay\"\n                                                onChange = {this.onDelayRadio.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            this.state.isDelay && \n                            <div className=\"form-item delay-reason-input\">\n                                <div className=\"form-item-wrapper\">\n                                    <div className=\"item-input\">\n                                        <div className=\"input-box\">\n                                            <textarea \n                                                name=\"delay-reason\" \n                                                className=\"input-ele\" \n                                                id=\"delay-reason\" \n                                                placeholder=\"\" \n                                                onChange={this.onDelayReasonInput.bind(this)}\n                                                value={this.state.delayReason}\n                                                >\n                                                \n                                            </textarea>\n                                            task.delayReason.length && <div className=\"clear-btn\" onClick = {()=>this.setState({delayReason:''})}>x</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className=\"form-task-list-input-box\">\n                            <div className=\"form-task-list-input\">\n                                {\n                                   this.state.list.map(function(item,index){\n                                        return (\n                                            <div className=\"form-item task-list-item\" key={'form-task-'+index}>\n                                                <div className=\"form-item-wrapper\">\n                                                    <div className=\"item-input\">\n                                                        <div className=\"input-box\">\n                                                            <input type=\"text\" className=\"task-title-input input-ele\"\n                                                            id={'task'+index+'title'}\n                                                            placeholder={'task '+(index+1)+' title'}\n                                                            value={item.title}\n                                                            onChange = {this.onTaskModify.bind(this,'title',item,index,true)}\n                                                            />\n                                                            item.title.length && <div className=\"clear-btn\" onClick = {this.onTaskModify.bind(this,'title',item,index,false)}>x</div>\n                                                        </div>\n                                                        <div className=\"input-box\">\n                                                            <input type=\"text\" \n                                                                    className=\"task-time-input input-ele\" \n                                                                    id={'task-'+index+'-time-input'}\n                                                                    value={item.time}\n                                                                    onChange = {this.onTaskModify.bind(this,'time',item,index,true)}\n                                                                    placeholder={'task '+index+' spend'}\n                                                                    />\n                                                            <select \n                                                                name={'task-'+index+'-time'}\n                                                                className=\"select-ele\"\n                                                                id={'task-'+index+'-time-select'}\n                                                                value={item.time}\n                                                                onChange={this.onTaskModify.bind(this,'time',item,index,true)}\n                                                                >\n                                                                <option value={0}  disabled>0 h</option>\n                                                                {\n                                                                    new Array(24).fill('').map((op,h)=>(<option key={h} value={(h+1)*0.5}> {(h+1)*0.5}h </option> ))\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"input-box\">\n                                                            <textarea \n                                                                className=\"task-content-input input-ele\" \n                                                                id={'task-'+index+'-content'}\n                                                                value={item.resultContent}\n                                                                onChange={this.onTaskModify.bind(this,'resultContent',item,index,true)}\n                                                            ></textarea>\n                                                            item.resultContent.length && <div className=\"clear-btn\" onClick = {this.onTaskModify.bind(this,'resultContent',item,index,false)}>x</div>\n                                                        </div>\n                                                        {   item.subtasks.length && \n                                                            <div className=\"subtask-input-list-box\">\n                                                                <div className=\"subtask-input-list\">\n                                                                    {item.subtasks.map((subItem,subIndex)=>(\n                                                                        <div className=\"subtask-input-item\" key={'subtask-input-'+subIndex}>\n                                                                            <div className=\"subtask-input input-box\">\n                                                                                <input type=\"text\"          \n                                                                                    className=\"subtask-input-ele input-ele\" \n                                                                                    id={'task-'+index+'-subtask-'+subIndex}\n                                                                                    placeholder={'subtask-'+(subIndex+1) }\n                                                                                    value={subItem.title}\n                                                                                    onChange={this.onSubtaskTitleInput.bind(this,item,index,subIndex,true)}\n                                                                                />\n                                                                                subItem.title.length && <div className=\"clear-btn\" onClick = {this.onSubtaskTitleInput.bind(this,item,index,subIndex,false)}>x</div>\n                                                                            </div>\n                                                                            <div className=\"btn-box\">\n                                                                                <div className=\"delete-btn btn\" onClick={this.onDeleteSubtask.bind(this,item,index,subIndex)}></div>\n                                                                            </div>\n                                                                        </div>\n                                                                    ))}\n                                                                </div>\n                                                            </div>\n                                                            \n                                                        }\n                                                         <div className=\"btn-box add-subtask\"><div className=\"btn add-subtask-btn\" onClick={this.onDAddSubtask.bind(this,index)}>+</div></div>\n                                                    </div>\n                                                    <div className=\"task-delete-btn  btn\" onClick={this.onDeleteTask.bind(this,item,index)}>x</div>\n                                                </div>\n                                            </div>\n                                        ) \n                                   }.bind(this))\n                                }\n                               \n                            </div>\n                            <div className=\"btn-box add-task\">\n                            <div className=\"add-task-btn btn\" onClick={this.onAddTask.bind(this)}>add a new task</div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            \n                <div  className={this.state.isVisible ?'visible task-format-content-box':'task-format-content-box' }>\n                    <div className=\"task-format-content\" id=\"task-contents\">\n                        <div className=\"content-wrapper\">\n                            <h2 className=\"task-date\"><DateFormat format=\"yyyy-MM-dd\"></DateFormat> <span>{this.state.isDelay ? '需延期' : '无延期'}</span></h2> \n                            <div className=\"delay-reason-info\">\n                                {this.state.isDelay && <span>延期原因:</span> }\n                                {this.state.delayReason && <span>{this.state.delayReason}</span>}\n                            </div>\n                            <p>——————————————————</p>\n                            <div className=\"task-list-content-box\">\n                                <div className=\"task-list-content\">\n                                    {\n                                        this.state.list.map((item,index)=>(\n                                            <div className=\"task-item-content\"\n                                                key={index}\n                                                data-index={index}\n                                            >\n                                                <h3 className=\"task-item-title\">◉ 任务 {index+1} : <span></span>{item.title}</h3>\n                                                <div className=\"task-item-time\" >◉ 耗时<span> : </span>{item.time}h</div>\n                                                <div className=\"task-item-result\">\n                                                    <span>◉ 量化产出 : {item.resultContent}</span>\n                                                    {item.subtasks.length && <ul>\n                                                    <p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>-------</p>\n                                                        {\n                                                            item.subtasks.map((subItem,subIndex)=>(\n                                                                <li key={'p'+subIndex}>\n                                                                    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                                                                    <span>{subIndex+1}.</span>\n                                                                    <span >{subItem.title}</span>\n                                                                </li>\n                                                            ))\n                                                        }\n                                                    \n                                                    </ul>\n                                                    }\n                                                    <p style={{'overflow':'hidden'}}>——————————————————</p>\n                                                </div>\n                                            </div>\n                                        ))\n                                    }\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    </div>\n                \n                \n                <div \n                    className=\"copy-btn copy-task-contents btn\" \n                    data-clipboard-action=\"copy\" \n                    data-clipboard-target=\"#task-contents\" \n                    onClick={this.showContent.bind(this)}\n                    >copy</div> \n                <div className=\"showContent-btn btn\" onClick={this.showContent.bind(this)}>{this.state.isVisible ? 'hide' : 'show'}</div>\n\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport DateFormat from \"../dateFormat/dateFormat\";\nimport \"../../assets/style/daily.scss\";\nimport Editor from \"@components/daily/editor\"\nexport default class DailyReport extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n\n    }\n  }\n  render(){\n    return(\n      <Editor></Editor>\n    )\n  }\n} ","import React from \"react\";\nexport default class Input extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    changeValue(isClear,e){\n        let val = isClear ? '' : e.target.value  ;\n        val = val.replace(/^\\s+|\\s+$/,'');\n        this.props.onChange(val)\n    }\n    render(){\n        return(\n            <div className=\"input-box\">\n                {\n                    (!this.props.nodeName || this.props.nodeName == 'input') && \n                    <input type=\"text\" className=\"input-ele\"  \n                        value={this.props.value} \n                        onChange={this.changeValue.bind(this,false)}\n                        id={this.props.id||''}\n                        placeholder = {this.props.placeholder || ''}\n                    />\n                }\n\n                {\n                    this.props.nodeName == 'textarea' && \n                    <textarea type=\"text\" className=\"input-ele\"  \n                        value={this.props.value} \n                        onChange={this.changeValue.bind(this,false)}\n                        id={this.props.id || ''}\n                        placeholder = {this.props.placeholder || ''}\n                    ></textarea>\n                }\n               \n                <span className=\"clear-btn\" onClick={this.changeValue.bind(this,true)}>clear</span>\n            </div>\n        )\n    }\n    \n}","import \"../../assets/style/main.scss\";\nimport React from \"react\";\nimport ThreeCanvas from \"@components/three/threeCanvas\";\nimport DailyReport from \"@components/daily/dailyReport\"\n\nexport default class Main extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n           \n        }\n    }\n    render(){\n        return(\n            <div className=\"container\"> \n                <DailyReport></DailyReport>\n            </div>\n            \n        )\n    }\n\n}","import React from \"react\";\nexport default class Input extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    changeValue(e){\n        let val = e.target.querySelector(\"option:checked\").value || ''  ;\n        this.props.onChange(val)\n    }\n    render(){\n        return(\n            <div className=\"select-box\">\n                <select type=\"text\" className=\"select-ele \"  \n                    value={this.props.value}\n                    onChange={this.changeValue.bind(this)}\n                    id={this.props.id || ''}\n                >\n                     {\n                        this.props.options && this.props.options.length > 0 && \n                        this.props.options.map((item,index)=>{\n                            return( \n                                <option value={item.value} key={index}>{item.title}</option>)\n                        })\n                    }\n                </select>\n            </div>\n        )\n    }\n    \n}","import React from \"react\";\nimport Input from '@components/form/input';\nimport Select from '@components/form/select';\nexport default class taskInput extends React.Component{\n    constructor(){\n        super();\n        this.state ={\n            taskTitle : \"\",\n            timer:0,\n            subTasks:[],\n        }\n    }\n    inputTaskTitle(value){\n        console.log(value)\n        this.setState({taskTitle:value})\n    }\n    addSubtask(index,value){\n        let val = ''\n        let arr = this.state.subTasks.slice();\n        if( index >= 0){\n            val = value || ''\n            arr[index] = val;\n        }else{\n            arr.push(val)\n        }\n        this.setState({ subTasks : arr})\n        console.log(this.state.subTasks)\n    }\n    render(){\n        return(\n            \n            <div className=\"task-input-box\">\n                <div className=\"task-title-input\">\n                   <Input \n                    value={this.state.taskTitle}\n                    onChange = {this.inputTaskTitle.bind(this)}\n                    id=\"task-title-input-#3231312\"\n                   ></Input>\n                </div>\n                <div className=\"task-timer\">\n                    <Select></Select>\n                </div>\n\n                {   \n                    this.state.subTasks.length >0 && \n                    <div className=\"sub-task-input-box\">\n                        <div className=\"sub-task-input\">\n                            {this.state.subTasks.map((value,index)=>{\n                                return(<Input \n                                    value={value} \n                                    onChange = {this.addSubtask.bind(this,index)}></Input> )\n                            })}\n                        </div>\n                    </div>\n                }\n                <div className=\"add-subtask-box\">\n                    <div className=\"add-subtask-btn btn\" onClick={this.addSubtask.bind(this,-1)}>+</div>\n                </div>\n               \n                \n            </div>\n\n        )\n    }\n}","import React from  'react';\nimport TaskInput from '@components/report/taskInput';\nexport default class Editor extends React.Component{\n    constructor(){\n        super();\n    }\n    render(){\n        return(\n            <div className=\"editor-box\">\n                <div className=\"editor-container\">\n                    <form action=\"\" className=\"report-editor-form\">\n                        <TaskInput ></TaskInput>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","import \"@style/report.scss\"\nimport React from \"react\";\nimport Editor from '@components/report/editor.jsx';\nexport default class Report extends React.Component{\n    constructor(){\n        super();\n\n    }\n    render(){\n        return(<Editor></Editor>)\n    }\n}","import React from \"react\";\nimport Input from '@components/form/input';\nexport default class skuInput extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      skuData : {\n        sku : '',\n        title : ''\n      }\n    }\n  }\n  changeData(key,value){\n   \n    let obj = {...this.state.skuData};\n    obj[key] = value || '';\n    this.setState({skuData : obj })\n    this.props.change(obj);\n  }\n  deleteItem(){\n    this.props.delete();\n  }\n  render(){\n    return(\n      <div className=\"sku-input-relate\">  \n        <div className=\"seq\">{this.props.index + 1}</div>\n        <div className=\"sku-input\">\n          <Input \n            onChange = {this.changeData.bind(this,'sku')}\n            value={this.props.value.sku}\n            placeholder=\"输入sku\"\n          />   \n        </div>\n        <div className=\"product-title-input\">\n          <Input \n            onChange = {this.changeData.bind(this,'title')}\n            value={this.props.value.title}\n            placeholder=\"输入标题\"\n          />   \n        </div>\n        <div className=\"del btn\" onClick = {this.deleteItem.bind(this)} > 删除 </div>\n      </div> \n    )\n  }\n}\n","import React from \"react\";\nimport SkuInput from \"@components/form2Json/skuInput\"\nexport default class form2Input extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  changeSkuData(index,newVal){\n    let arr = [...this.props.skuList];\n    arr[index] = newVal;\n    this.props.change(arr)\n  }\n  deleteSkuItem(index){\n    let arr = [...this.props.skuList];\n    arr.splice(index,1)\n    this.props.change(arr)\n  }\n\n  render(){\n    return(\n        <div className=\"form-box\">\n          <form className=\"sku-relate-form\">\n            <div className=\"sku-input-list\">\n              {this.props.skuList && this.props.skuList.map((value,index)=>{\n                return(\n                  <SkuInput\n                    index = {index}\n                    value = {value}\n                    change = {this.changeSkuData.bind(this,index)}\n                    delete = {this.deleteSkuItem.bind(this,index)}\n                    key = {index}\n                  ></SkuInput>\n                )\n              })}\n            </div>\n          </form>\n        </div>\n    )\n  }\n}\n","import React from \"react\";\nimport Select from '@components/form/select';\nexport default class form2Input extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {qty:1}\n  }\n  changeQty(val){\n    this.setState({qty:parseInt(val) || 1 })\n  }\n  addSkuInput(){\n    let qty = this.state.qty;\n    this.props.onClick(\n      new Array(qty).fill({\n      sku : \"\",\n      title : \"\"\n    }))\n  }\n\n  render(){\n    return(\n      <div className=\"add-sku-input-box\">\n        <div className=\"add-sku-input-btn btn-box\">\n          <div className=\"btn\" onClick={this.addSkuInput.bind(this)}>新增</div>\n        </div>\n        <div className=\"add-qty-select\">\n          <Select \n            value = {this.state.qty}\n            onChange = {this.changeQty.bind(this)}\n            options={ new Array(10).fill('').map((value,index)=>{\n              return {\n                value : parseInt(index + 1),\n                title : index + 1\n              }\n            })\n          }\n          ></Select>\n        </div>\n    </div>\n    )\n  }\n}\n","import React from  \"react\"\nimport ClipBoard from \"clipboard\";\n\n\nexport default class JsonOpera extends React.Component{\n  constructor(props){\n    super(props)\n  }\n  \n\n  componentDidMount(){\n    new ClipBoard('.copy-json-data');\n  }\n\n  render(){\n    return(\n      <div className=\"json-opera-box\">\n        <div className=\"copy-json-data btn\"\n          data-clipboard-action=\"copy\" \n          data-clipboard-target=\"#copy-json-target\" \n        >COPY</div>\n      </div>\n    )\n  }\n}","import React from  \"react\"\nimport ClipBoard from \"clipboard\";\n\n\nexport default class JsonOpera extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      jsonString : '',\n      jsonData : [],\n      warningContent : []\n    }\n  }\n  formatData(nextProps){\n   let arr = [...nextProps.skuList];\n   let newArr = []\n   let obj = {};\n   let warning = []\n    arr.map((item,index)=>{\n     if(item.sku && item.title){\n      if(item.sku in obj ){\n        warning.push('第'+(index+1)+'项的sku跟第'+(obj[item.sku]+1)+'项冲突了!')\n        return \n      }\n      obj[item.sku] = index\n      newArr.push(item);\n     }else if(!item.sku && item.title){\n      warning.push('第'+(index+1)+'项的sku别忘记填写哦!')\n    }else if(item.sku && !item.title){\n      warning.push('第'+(index+1)+'项的标题别忘记填写哦!')\n    }\n     \n\n   })\n   this.setState({warningContent : warning}) \n   this.setState({jsonData : newArr})\n  }\n  stringData(){\n    let orEle = document.getElementById(\"json-format-target\");\n    if(!orEle) return \n    let str = orEle.innerText;\n    str = str.replace(/\\s+/g,'')\n    document.getElementById('copy-json-target').innerText = str ;\n  }\n  componentWillReceiveProps(props){\n    this.formatData(props)\n  }\n  componentDidUpdate(){\n    this.stringData();\n  }\n  componentDidMount(){\n    this.stringData();\n  }\n\n  render(){\n    return(\n        <div className=\"json-content-box\">\n          {\n            this.state.warningContent.length > 0  &&  \n            <div className=\"warning-content\">\n              {this.state.warningContent.map((value,index)=>{\n                return(<div className=\"warinig-tip-item\" key={index}>{value}</div>)\n              })}\n            </div> \n          }\n          {\n            this.state.jsonData.length > 0 && \n              <div className=\"json-content json-format-content\" id=\"json-format-target\" > \n                <div className=\"json-start\">{'{'}</div>\n                  <ul>\n                    {\n                      this.state.jsonData.map((item,index)=>{\n                        return(\n                            item.sku && item.title && \n                              <li className=\"json-item\" key = {index}><span>\"{item.sku}\":</span><span>\"{item.title}\"</span>{index < this.state.jsonData.length-1 && <span>,</span>}</li>\n                          )\n                      }) \n                    }\n                  </ul>\n                  <div className=\"json-end\">{'}'}</div>\n              </div> \n              \n          }\n          <div id=\"copy-json-target\"> </div>\n        </div> \n    )\n  }\n\n\n  \n}","import React from \"react\";\nimport SkuForm from \"@components/form2Json/skuForm\"\nimport AddSkuBtn from \"@components/form2Json/addSkuItem\"\nimport JsonOpera from \"@components/form2Json/jsonOpera\"\nimport JsonContent from \"@components/form2Json/jsonContent\"\n\nimport \"@style/form2Json.scss\"\nexport default class form2Input extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      skuList:[{\n        sku : \"\",\n        title : \"\"\n      }],\n    }\n  }\n  changeFormData(skuList){  \n    this.setState({skuList:skuList})\n  }\n  addSkuItem(arr){\n    console.log(arr)\n    this.setState({skuList : [...this.state.skuList,...arr]})\n  }\n\n \n  render(){\n    return(\n      <div className=\"page-wrapper\">\n          <SkuForm\n            skuList = {this.state.skuList}\n            change = {this.changeFormData.bind(this)}\n          ></SkuForm>\n          <JsonContent skuList = {this.state.skuList}></JsonContent>\n          <div className=\"bottom-box\">\n            <AddSkuBtn onClick = {this.addSkuItem.bind(this)}></AddSkuBtn>\n            <JsonOpera></JsonOpera>\n          </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";  \nimport Main from \"@view/main/main\"\nimport Report from \"@view/report/report\";\nimport Form2Json from \"@view/form2Json/form2Json\";\nclass App extends React.Component{\n  // eslint-disable-next-line \n  constructor(){\n    super(); \n  }\n  remInit(){\n    let width = document.documentElement.getBoundingClientRect().width;\n    let size ;\n    if(width <= 375) size = 100\n    if(width > 375)  size = width / 375 * 100\n    if(width > 768)  size = width / 768 * 100\n    if(width > 1200) size = width / 1200 * 100\n    document.documentElement.style.fontSize = size   + \"px\"\n  }\n  setMeta(){\n    let meta  = document.createElement(\"meta\");\n    meta.name = \"viewport\";\n    meta.content = \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\"\n   if(document.head.querySelector(\"meta[name='viewport']\")){\n    document.head.querySelector(\"meta[name='viewport']\").content = meta.content;\n   }else{\n    document.head.appendChild(meta)\n   }\n  }\n  render(){\n    let self = this ;\n    this.remInit();\n    this.setMeta();\n    window.addEventListener(\"resize\",self.remInit);\n\n    return(\n      // <Main></Main>\n      // <Report> </Report>\n      <Form2Json></Form2Json>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}